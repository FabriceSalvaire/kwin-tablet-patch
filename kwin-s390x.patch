diff --git a/input.cpp b/input.cpp
index a0ba034ce..8c399af20 100644
--- a/input.cpp
+++ b/input.cpp
@@ -1669,7 +1669,7 @@ public:
                 static const auto createDefaultCursor = [] {
                     WaylandCursorImage defaultCursor;
                     WaylandCursorImage::Image ret;
-                    defaultCursor.loadThemeCursor(CursorShape(Qt::CrossCursor), &ret);
+                    defaultCursor.loadThemeCursor2(CursorShape(Qt::CrossCursor), &ret);
                     return ret;
                 };
                 static const auto defaultCursor = createDefaultCursor();
diff --git a/pointer_input.cpp b/pointer_input.cpp
index 55af1502a..9e96b7331 100644
--- a/pointer_input.cpp
+++ b/pointer_input.cpp
@@ -1270,6 +1270,12 @@ void CursorImage::loadThemeCursor(const QByteArray &shape, WaylandCursorImage::I
     m_waylandImage.loadThemeCursor(shape, m_cursorsByName, image);
 }

+void WaylandCursorImage::loadThemeCursor2(CursorShape shape, WaylandCursorImage::Image *image)
+{
+    loadThemeCursor(shape, image);
+}
+
+
 template <typename T>
 void WaylandCursorImage::loadThemeCursor(const T &shape, Image *image)
 {
diff --git a/pointer_input.h b/pointer_input.h
index 1ae6a7505..386bc57f8 100644
--- a/pointer_input.h
+++ b/pointer_input.h
@@ -186,6 +186,9 @@ public:
         QImage image;
         QPoint hotspot;
     };
+
+    void loadThemeCursor2(CursorShape shape, WaylandCursorImage::Image *image);
+
     template <typename T>
     void loadThemeCursor(const T &shape, Image *image);
